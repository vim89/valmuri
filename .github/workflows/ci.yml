name: Continuous Integration

on:
  push:
    branches: [main, develop, 'feature/*']
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * 1' # Weekly dependency check
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  validate:
    name: Code Quality & Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better blame info

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Mill 1.0.1
        run: |
          curl -L -o mill.sh https://repo1.maven.org/maven2/com/lihaoyi/mill-dist/1.0.1/mill-dist-1.0.1-mill.sh
          chmod +x mill.sh
          echo "//| mill-version: 1.0.1" > build.mill

      - name: Verify Mill version
        run: ./mill.sh --version

      - name: Cache Ivy and Mill artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/mill
            ~/.ivy2/cache
            ~/.m2/repository
          key: ${{ runner.os }}-mill
          restore-keys: |
            ${{ runner.os }}-mill

      - name: Validate Formatting
        run: ./mill.sh mill.scalalib.scalafmt.ScalafmtModule/checkFormatAll __.sources

      - name: Compile Modules
        run: |
          ./mill.sh valmuri.compile
          ./mill.sh cli.compile
          ./mill.sh examples.helloWorld.compile

      - name: Run Unit Tests
        run: ./mill.sh __test

      - name: Generate Coverage Report
        run: ./mill.sh coverage

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./out/valmuri/scoverage/htmlReport.dest/scoverage.xml
          fail_ci_if_error: true

      - name: Run Integration Tests
        run: |
          mill examples.helloWorld.run &
          APP_PID=$!
          sleep 10
          curl -f http://localhost:8080/health || exit 1
          kill $APP_PID

      - name: Scan for Vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-results.sarif
        continue-on-error: true

      - name: Verify SARIF file exists
        run: |
          ls -al .
          if [ ! -f trivy-results.sarif ]; then
            echo "SARIF file not found!" >&2
            exit 1
          fi

      - name: Upload Security Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          wait-for-processing: true

  test-cross-platform:
    if: false # This job is disabled by default, enable if needed
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Mill
        run: |
          if [[ "$(uname)" == "Linux" ]]; then
            curl -L https://github.com/com-lihaoyi/mill/releases/download/1.0.1/1.0.1 > /usr/local/bin/mill && chmod +x /usr/local/bin/mill
          else
            brew install mill@1.0.1 || brew install mill
          fi

      - name: Run Tests
        run: mill testAll

  performance-benchmark:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Install Mill
        run: |
          curl -L https://github.com/com-lihaoyi/mill/releases/download/1.0.1/1.0.1 > /usr/local/bin/mill && chmod +x /usr/local/bin/mill
      - name: Run Benchmarks
        run: mill benchmarks.runMain org.openjdk.jmh.Main

      - name: Upload Benchmark Results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'jmh'
          output-file-path: benchmark-results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [validate, test-cross-platform]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Install Mill
        run: |
          curl -L https://github.com/com-lihaoyi/mill/releases/download/1.0.1/1.0.1 > /usr/local/bin/mill && chmod +x /usr/local/bin/mill
      - name: Publish Modules
        run: mill mill.scalalib.PublishModule/publishAll
      - name: Build CLI Bundle
        run: mill cli.assembly
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            out/cli/assembly.dest/out.jar
          generate_release_notes: true
